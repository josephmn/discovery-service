apiVersion: apps/v1 # Define la versión de la API de Kubernetes que se usará para este recurso. apps/v1 es la versión adecuada para los despliegues Deployment.
kind: Deployment # Define el tipo de recurso que estás creando.
metadata:
  name: discovery-service # Asignación de un nombre
spec: # Definición específica del deployment
  replicas: 1 # Define cuántas instancias (réplicas) de este contenedor deben estar corriendo.
  selector: # Define el criterio que Kubernetes usará para identificar los Pods gestionados por este Deployment
    matchLabels: # Se usa para emparejar Pods basados en etiquetas. app: discovery-service asegura que Kubernetes seleccione solo los Pods que tengan esta etiqueta.
      app: discovery-service
  template: # Describe cómo se creará cada Pod que representa el Deployment.
    metadata: # Asigna la etiqueta app: discovery-service a cada Pod creado por este Deployment. Esta etiqueta debe coincidir con el matchLabels en el selector, de modo que Kubernetes pueda identificar los Pods que pertenecen a este Deployment.
      labels:
        app: discovery-service
    spec: # Describe la configuración de los contenedores dentro del Pod.
      containers: # Una lista de contenedores que se ejecutarán en el Pod.
        - name: discovery-service # Asigna el nombre discovery-service al contenedor. Este nombre es una referencia dentro del Pod y ayuda a identificar el contenedor.
          image: discovery-service:1.0  # Define la imagen de contenedor que se usará. En este caso, es discovery-service:1.0, que debe reemplazarse con el nombre y la etiqueta de la imagen que tengas en tu registro (local o en la nube).
          ports: # Lista de puertos que el contenedor expone.
            - containerPort: 8761 # Define el puerto 8888 dentro del contenedor, que probablemente será el puerto en el que tu aplicación escucha solicitudes. Kubernetes usará este puerto para redirigir el tráfico hacia el contenedor.